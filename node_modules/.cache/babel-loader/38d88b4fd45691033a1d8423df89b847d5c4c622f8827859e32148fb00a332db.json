{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nandh\\\\OneDrive\\\\Desktop\\\\MicroProject\\\\FrontEnd\\\\myproject\\\\src\\\\Admin\\\\AddMark.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddMarks = () => {\n  _s();\n  var _subjects$selectedSem;\n  const [students, setStudents] = useState([]);\n  const [semesters] = useState(['Semester 1', 'Semester 2', 'Semester 3', 'Semester 4']); // Static list of semesters\n  const [subjects] = useState({\n    'Semester 1': ['Mathematics', 'Physics', 'Chemistry'],\n    'Semester 2': ['Biology', 'Computer Science', 'History'],\n    'Semester 3': ['Economics', 'English Literature', 'Sociology'],\n    'Semester 4': ['Geography', 'Political Science', 'Statistics']\n  }); // Static mapping of semesters to subjects\n  const [selectedStudent, setSelectedStudent] = useState('');\n  const [selectedSemester, setSelectedSemester] = useState('');\n  const [marks, setMarks] = useState({});\n  const [error, setError] = useState('');\n\n  // Fetch students from backend\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/students');\n        const data = await response.json();\n        setStudents(data); // Set the students in state\n      } catch (err) {\n        setError('Failed to fetch students.');\n      }\n    };\n    fetchStudents();\n  }, []);\n  const handleStudentChange = e => {\n    setSelectedStudent(e.target.value); // Update selected student\n  };\n  const handleSemesterChange = e => {\n    setSelectedSemester(e.target.value); // Update selected semester\n    setMarks({}); // Reset marks when semester changes\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMarks(prevMarks => ({\n      ...prevMarks,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedStudent || !selectedSemester) {\n      setError('Please select both a student and a semester.');\n      return;\n    }\n\n    // Transform marks to match backend format\n    const formattedMarks = subjects[selectedSemester].reduce((acc, subject, index) => {\n      acc[subject] = marks[`marks${index + 1}`];\n      return acc;\n    }, {});\n    const payload = {\n      semester: selectedSemester,\n      marks: formattedMarks\n    };\n    try {\n      const response = await fetch(`http://localhost:5000/api/marks/${selectedStudent}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(data.message); // Show success message\n        setMarks({}); // Reset marks\n        setSelectedStudent(''); // Reset selected student\n        setSelectedSemester(''); // Reset selected semester\n        setError('');\n      } else {\n        setError(data.error || 'Failed to add marks. Please try again.');\n      }\n    } catch (err) {\n      setError('Failed to add marks. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Marks for Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Student:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedStudent,\n        onChange: handleStudentChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select a Student--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), students.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: student.id,\n          children: [student.firstName, \" \", student.lastName, \" (Roll No: \", student.rollNumber, \")\"]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Semester:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSemester,\n        onChange: handleSemesterChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select a Semester--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), semesters.map((semester, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: semester,\n          children: semester\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), selectedSemester && ((_subjects$selectedSem = subjects[selectedSemester]) === null || _subjects$selectedSem === void 0 ? void 0 : _subjects$selectedSem.map((subject, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: `marks${index + 1}`,\n          value: marks[`marks${index + 1}`] || '',\n          onChange: handleInputChange,\n          placeholder: `Marks for ${subject}`,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this))), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Marks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(AddMarks, \"JDEj7nvBoOXX8LzJlu/2Kvvb4mM=\");\n_c = AddMarks;\nexport default AddMarks;\nvar _c;\n$RefreshReg$(_c, \"AddMarks\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AddMarks","_s","_subjects$selectedSem","students","setStudents","semesters","subjects","selectedStudent","setSelectedStudent","selectedSemester","setSelectedSemester","marks","setMarks","error","setError","fetchStudents","response","fetch","data","json","err","handleStudentChange","e","target","value","handleSemesterChange","handleInputChange","name","prevMarks","handleSubmit","preventDefault","formattedMarks","reduce","acc","subject","index","payload","semester","method","headers","body","JSON","stringify","ok","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","onChange","required","map","student","id","firstName","lastName","rollNumber","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/nandh/OneDrive/Desktop/MicroProject/FrontEnd/myproject/src/Admin/AddMark.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AddMarks = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [semesters] = useState(['Semester 1', 'Semester 2', 'Semester 3', 'Semester 4']); // Static list of semesters\r\n  const [subjects] = useState({\r\n    'Semester 1': ['Mathematics', 'Physics', 'Chemistry'],\r\n    'Semester 2': ['Biology', 'Computer Science', 'History'],\r\n    'Semester 3': ['Economics', 'English Literature', 'Sociology'],\r\n    'Semester 4': ['Geography', 'Political Science', 'Statistics'],\r\n  }); // Static mapping of semesters to subjects\r\n  const [selectedStudent, setSelectedStudent] = useState('');\r\n  const [selectedSemester, setSelectedSemester] = useState('');\r\n  const [marks, setMarks] = useState({});\r\n  const [error, setError] = useState('');\r\n\r\n  // Fetch students from backend\r\n  useEffect(() => {\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/students');\r\n        const data = await response.json();\r\n        setStudents(data); // Set the students in state\r\n      } catch (err) {\r\n        setError('Failed to fetch students.');\r\n      }\r\n    };\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  const handleStudentChange = (e) => {\r\n    setSelectedStudent(e.target.value); // Update selected student\r\n  };\r\n\r\n  const handleSemesterChange = (e) => {\r\n    setSelectedSemester(e.target.value); // Update selected semester\r\n    setMarks({}); // Reset marks when semester changes\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setMarks((prevMarks) => ({ ...prevMarks, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    if (!selectedStudent || !selectedSemester) {\r\n      setError('Please select both a student and a semester.');\r\n      return;\r\n    }\r\n  \r\n    // Transform marks to match backend format\r\n    const formattedMarks = subjects[selectedSemester].reduce((acc, subject, index) => {\r\n      acc[subject] = marks[`marks${index + 1}`];\r\n      return acc;\r\n    }, {});\r\n  \r\n    const payload = {\r\n      semester: selectedSemester,\r\n      marks: formattedMarks,\r\n    };\r\n  \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/marks/${selectedStudent}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (response.ok) {\r\n        alert(data.message); // Show success message\r\n        setMarks({}); // Reset marks\r\n        setSelectedStudent(''); // Reset selected student\r\n        setSelectedSemester(''); // Reset selected semester\r\n        setError('');\r\n      } else {\r\n        setError(data.error || 'Failed to add marks. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to add marks. Please try again.');\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Enter Marks for Student</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Select Student:</label>\r\n        <select\r\n          value={selectedStudent}\r\n          onChange={handleStudentChange}\r\n          required\r\n        >\r\n          <option value=\"\">--Select a Student--</option>\r\n          {students.map((student) => (\r\n            <option key={student.id} value={student.id}>\r\n              {student.firstName} {student.lastName} (Roll No: {student.rollNumber})\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label>Select Semester:</label>\r\n        <select\r\n          value={selectedSemester}\r\n          onChange={handleSemesterChange}\r\n          required\r\n        >\r\n          <option value=\"\">--Select a Semester--</option>\r\n          {semesters.map((semester, index) => (\r\n            <option key={index} value={semester}>\r\n              {semester}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        {selectedSemester &&\r\n          subjects[selectedSemester]?.map((subject, index) => (\r\n            <div key={index}>\r\n              <label>{subject}</label>\r\n              <input\r\n                type=\"number\"\r\n                name={`marks${index + 1}`}\r\n                value={marks[`marks${index + 1}`] || ''}\r\n                onChange={handleInputChange}\r\n                placeholder={`Marks for ${subject}`}\r\n                required\r\n              />\r\n            </div>\r\n          ))}\r\n\r\n        <button type=\"submit\">Save Marks</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMarks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}