{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nandh\\\\OneDrive\\\\Desktop\\\\MicroProject\\\\FrontEnd\\\\myproject\\\\src\\\\Student\\\\MarkView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentMarks = () => {\n  _s();\n  const [marks, setMarks] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true); // Adding loading state\n\n  useEffect(() => {\n    const fetchMarks = async () => {\n      try {\n        // Start loading\n        setLoading(true);\n\n        // Sending the GET request with session support\n        const response = await axios.get('http://localhost:5000/api/student/marksviewstudent', {\n          withCredentials: true // Ensure session is sent along with the request\n        });\n        console.log('API Response:', response.data); // Log the full response data\n\n        // Check if the response is successful\n        if (response.data.success) {\n          setMarks(response.data.marks); // Set marks if successful\n        } else {\n          setError(response.data.message || 'Unknown error'); // Set error if any\n        }\n      } catch (error) {\n        console.error('Error fetching marks:', error);\n        setError('An error occurred while fetching marks. Please check the console for more details.');\n      } finally {\n        setLoading(false); // End loading\n      }\n    };\n    fetchMarks();\n  }, []); // Empty dependency array to run once after component mounts\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this); // Show loading message while fetching\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Student Marks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) // Display error if exists\n    : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Marks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), marks && marks.length > 0 ? marks.map((mark, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px',\n          border: '1px solid #ddd',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Semester:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 20\n          }, this), \" \", mark.semester]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Marks:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 20\n          }, this), \" \", mark.marks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No marks found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this) // Handle case when no marks are available\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentMarks, \"PIxWNZT6uKIW8AZXjAJpqugLpv4=\");\n_c = StudentMarks;\nexport default StudentMarks;\nvar _c;\n$RefreshReg$(_c, \"StudentMarks\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","StudentMarks","_s","marks","setMarks","error","setError","loading","setLoading","fetchMarks","response","get","withCredentials","console","log","data","success","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","mark","index","marginBottom","border","padding","semester","_c","$RefreshReg$"],"sources":["C:/Users/nandh/OneDrive/Desktop/MicroProject/FrontEnd/myproject/src/Student/MarkView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst StudentMarks = () => {\r\n  const [marks, setMarks] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true); // Adding loading state\r\n\r\n  useEffect(() => {\r\n    const fetchMarks = async () => {\r\n      try {\r\n        // Start loading\r\n        setLoading(true);\r\n\r\n        // Sending the GET request with session support\r\n        const response = await axios.get('http://localhost:5000/api/student/marksviewstudent', {\r\n          withCredentials: true, // Ensure session is sent along with the request\r\n        });\r\n\r\n        console.log('API Response:', response.data); // Log the full response data\r\n\r\n        // Check if the response is successful\r\n        if (response.data.success) {\r\n          setMarks(response.data.marks); // Set marks if successful\r\n        } else {\r\n          setError(response.data.message || 'Unknown error'); // Set error if any\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching marks:', error);\r\n        setError('An error occurred while fetching marks. Please check the console for more details.');\r\n      } finally {\r\n        setLoading(false); // End loading\r\n      }\r\n    };\r\n\r\n    fetchMarks();\r\n  }, []); // Empty dependency array to run once after component mounts\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>; // Show loading message while fetching\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Student Marks</h2>\r\n      {error ? (\r\n        <p style={{ color: 'red' }}>{error}</p> // Display error if exists\r\n      ) : (\r\n        <div>\r\n          <h3>Your Marks</h3>\r\n          {marks && marks.length > 0 ? (\r\n            marks.map((mark, index) => (\r\n              <div key={index} style={{ marginBottom: '10px', border: '1px solid #ddd', padding: '10px' }}>\r\n                <p><strong>Semester:</strong> {mark.semester}</p>\r\n                <p><strong>Marks:</strong> {mark.marks}</p>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No marks found.</p> // Handle case when no marks are available\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentMarks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}