{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nandh\\\\OneDrive\\\\Desktop\\\\MicroProject\\\\FrontEnd\\\\myproject\\\\src\\\\Admin\\\\AddMark.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddMarks = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [semesters, setSemesters] = useState(['Semester 1', 'Semester 2', 'Semester 3', 'Semester 4']); // Example semesters\n  const [selectedStudent, setSelectedStudent] = useState('');\n  const [selectedSemester, setSelectedSemester] = useState('');\n  const [subjects, setSubjects] = useState([]);\n  const [marks, setMarks] = useState({});\n  const [error, setError] = useState('');\n\n  // Fetch students from backend\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/students');\n        setStudents(response.data); // Set the students in state\n      } catch (err) {\n        setError('Failed to fetch students.');\n      }\n    };\n    fetchStudents();\n  }, []);\n\n  // Fetch subjects when semester is selected\n  useEffect(() => {\n    const fetchSubjects = async () => {\n      if (!selectedSemester) return; // Don't fetch if no semester is selected\n      try {\n        const response = await axios.get(`http://localhost:5000/api/subjects/${selectedSemester}`);\n        setSubjects(response.data);\n        setMarks({});\n      } catch (err) {\n        setError('Failed to fetch subjects.');\n      }\n    };\n    fetchSubjects();\n  }, [selectedSemester]);\n  const handleStudentChange = e => {\n    setSelectedStudent(e.target.value); // Update selected student\n  };\n  const handleSemesterChange = e => {\n    setSelectedSemester(e.target.value); // Update selected semester\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMarks(prevMarks => ({\n      ...prevMarks,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedStudent || !selectedSemester) {\n      setError('Please select both a student and a semester.');\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:5000/api/marks/${selectedStudent}`, marks);\n      alert(response.data.message); // Show success message\n      setMarks({}); // Reset marks after submission\n      setSelectedStudent(''); // Reset selected student\n      setSelectedSemester(''); // Reset selected semester\n    } catch (err) {\n      setError('Failed to add marks. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Marks for Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Student:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedStudent,\n        onChange: handleStudentChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select a Student--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), students.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: student.id,\n          children: [student.firstName, \" \", student.lastName, \" (Roll No: \", student.rollNumber, \")\"]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Semester:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSemester,\n        onChange: handleSemesterChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select a Semester--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), semesters.map((semester, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: semester,\n          children: semester\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), subjects.length > 0 && subjects.map((subject, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: subject.subjectName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: `marks${index + 1}`,\n          value: marks[`marks${index + 1}`] || '',\n          onChange: handleInputChange,\n          placeholder: `Marks for ${subject.subjectName}`,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Marks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(AddMarks, \"VLGcVtcpAOz9VjVixeUk5bU4GHE=\");\n_c = AddMarks;\nexport default AddMarks;\nvar _c;\n$RefreshReg$(_c, \"AddMarks\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AddMarks","_s","students","setStudents","semesters","setSemesters","selectedStudent","setSelectedStudent","selectedSemester","setSelectedSemester","subjects","setSubjects","marks","setMarks","error","setError","fetchStudents","response","get","data","err","fetchSubjects","handleStudentChange","e","target","value","handleSemesterChange","handleInputChange","name","prevMarks","handleSubmit","preventDefault","post","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","onChange","required","map","student","id","firstName","lastName","rollNumber","semester","index","length","subject","subjectName","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/nandh/OneDrive/Desktop/MicroProject/FrontEnd/myproject/src/Admin/AddMark.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AddMarks = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [semesters, setSemesters] = useState(['Semester 1', 'Semester 2', 'Semester 3', 'Semester 4']);  // Example semesters\r\n  const [selectedStudent, setSelectedStudent] = useState('');\r\n  const [selectedSemester, setSelectedSemester] = useState('');\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [marks, setMarks] = useState({});\r\n  const [error, setError] = useState('');\r\n\r\n  // Fetch students from backend\r\n  useEffect(() => {\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/students');\r\n        setStudents(response.data); // Set the students in state\r\n      } catch (err) {\r\n        setError('Failed to fetch students.');\r\n      }\r\n    };\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  // Fetch subjects when semester is selected\r\n  useEffect(() => {\r\n    const fetchSubjects = async () => {\r\n      if (!selectedSemester) return;  // Don't fetch if no semester is selected\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/subjects/${selectedSemester}`);\r\n        setSubjects(response.data);\r\n        setMarks({});\r\n      } catch (err) {\r\n        setError('Failed to fetch subjects.');\r\n      }\r\n    };\r\n\r\n    fetchSubjects();\r\n  }, [selectedSemester]);\r\n\r\n  const handleStudentChange = (e) => {\r\n    setSelectedStudent(e.target.value); // Update selected student\r\n  };\r\n\r\n  const handleSemesterChange = (e) => {\r\n    setSelectedSemester(e.target.value); // Update selected semester\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setMarks((prevMarks) => ({ ...prevMarks, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!selectedStudent || !selectedSemester) {\r\n      setError('Please select both a student and a semester.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000/api/marks/${selectedStudent}`, marks);\r\n      alert(response.data.message);  // Show success message\r\n      setMarks({}); // Reset marks after submission\r\n      setSelectedStudent('');  // Reset selected student\r\n      setSelectedSemester(''); // Reset selected semester\r\n    } catch (err) {\r\n      setError('Failed to add marks. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Enter Marks for Student</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Select Student:</label>\r\n        <select\r\n          value={selectedStudent}\r\n          onChange={handleStudentChange}\r\n          required\r\n        >\r\n          <option value=\"\">--Select a Student--</option>\r\n          {students.map((student) => (\r\n            <option key={student.id} value={student.id}>\r\n              {student.firstName} {student.lastName} (Roll No: {student.rollNumber})\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label>Select Semester:</label>\r\n        <select\r\n          value={selectedSemester}\r\n          onChange={handleSemesterChange}\r\n          required\r\n        >\r\n          <option value=\"\">--Select a Semester--</option>\r\n          {semesters.map((semester, index) => (\r\n            <option key={index} value={semester}>\r\n              {semester}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        {subjects.length > 0 && subjects.map((subject, index) => (\r\n          <div key={index}>\r\n            <label>{subject.subjectName}</label>\r\n            <input\r\n              type=\"number\"\r\n              name={`marks${index + 1}`}\r\n              value={marks[`marks${index + 1}`] || ''}\r\n              onChange={handleInputChange}\r\n              placeholder={`Marks for ${subject.subjectName}`}\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n        \r\n        <button type=\"submit\">Save Marks</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMarks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}