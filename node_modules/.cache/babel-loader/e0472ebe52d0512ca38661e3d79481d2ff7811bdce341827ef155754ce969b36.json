{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nandh\\\\OneDrive\\\\Desktop\\\\MicroProject\\\\FrontEnd\\\\myproject\\\\src\\\\Admin\\\\AddMark.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddMark = () => {\n  _s();\n  const {\n    rollNumber\n  } = useParams();\n  const navigate = useNavigate();\n\n  // Initialize state for subjects and marks\n  const [subjectsMarks, setSubjectsMarks] = useState({\n    semester: '',\n    subjects: [{\n      name: 'Mathematics',\n      marks: ''\n    }, {\n      name: 'Science',\n      marks: ''\n    }, {\n      name: 'English',\n      marks: ''\n    }, {\n      name: 'History',\n      marks: ''\n    }, {\n      name: 'Geography',\n      marks: ''\n    }, {\n      name: 'Computer Science',\n      marks: ''\n    }]\n  });\n  const [semesters, setSemesters] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Fetch the list of semesters\n  useEffect(() => {\n    const fetchSemesters = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/semesters');\n        setSemesters(response.data);\n      } catch (err) {\n        console.error('Error fetching semesters:', err);\n        setError('Failed to fetch semesters. Please try again.');\n      }\n    };\n    fetchSemesters();\n  }, []);\n\n  // Handle input change for semester and subject marks\n  const handleInputChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedSubjects = [...subjectsMarks.subjects];\n    updatedSubjects[index][name] = value;\n    setSubjectsMarks(prev => ({\n      ...prev,\n      subjects: updatedSubjects\n    }));\n  };\n\n  // Handle form submission to save marks\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`http://localhost:5000/api/addmarks/${rollNumber}`, subjectsMarks);\n      console.log(response.data);\n      alert('Marks added successfully');\n      navigate('/students');\n    } catch (err) {\n      console.error('Error adding marks:', err);\n      alert('Failed to add marks. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-marks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Add Marks for Student: \", rollNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Semester:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"semester\",\n          value: subjectsMarks.semester,\n          onChange: e => setSubjectsMarks({\n            ...subjectsMarks,\n            semester: e.target.value\n          }),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), semesters.map(semester => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: semester.name,\n            children: semester.name\n          }, semester.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), subjectsMarks.subjects.map((subject, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [subject.name, \" Marks:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"marks\",\n          value: subject.marks,\n          onChange: e => handleInputChange(e, index),\n          required: true,\n          min: \"0\",\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Marks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AddMark, \"+kA/K39ceRyICNT+p6kyG9U118w=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AddMark;\nexport default AddMark;\nvar _c;\n$RefreshReg$(_c, \"AddMark\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","AddMark","_s","rollNumber","navigate","subjectsMarks","setSubjectsMarks","semester","subjects","name","marks","semesters","setSemesters","error","setError","fetchSemesters","response","get","data","err","console","handleInputChange","e","index","value","target","updatedSubjects","prev","handleSubmit","preventDefault","post","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","onChange","required","map","id","subject","type","min","max","_c","$RefreshReg$"],"sources":["C:/Users/nandh/OneDrive/Desktop/MicroProject/FrontEnd/myproject/src/Admin/AddMark.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom'; \r\n\r\nconst AddMark = () => {\r\n  const { rollNumber } = useParams(); \r\n  const navigate = useNavigate(); \r\n\r\n  // Initialize state for subjects and marks\r\n  const [subjectsMarks, setSubjectsMarks] = useState({\r\n    semester: '',\r\n    subjects: [\r\n      { name: 'Mathematics', marks: '' },\r\n      { name: 'Science', marks: '' },\r\n      { name: 'English', marks: '' },\r\n      { name: 'History', marks: '' },\r\n      { name: 'Geography', marks: '' },\r\n      { name: 'Computer Science', marks: '' }\r\n    ]\r\n  });\r\n  const [semesters, setSemesters] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch the list of semesters\r\n  useEffect(() => {\r\n    const fetchSemesters = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/semesters');\r\n        setSemesters(response.data);\r\n      } catch (err) {\r\n        console.error('Error fetching semesters:', err);\r\n        setError('Failed to fetch semesters. Please try again.');\r\n      }\r\n    };\r\n\r\n    fetchSemesters();\r\n  }, []);\r\n\r\n  // Handle input change for semester and subject marks\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const updatedSubjects = [...subjectsMarks.subjects];\r\n    updatedSubjects[index][name] = value; \r\n    setSubjectsMarks((prev) => ({\r\n      ...prev,\r\n      subjects: updatedSubjects,\r\n    }));\r\n  };\r\n\r\n  // Handle form submission to save marks\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `http://localhost:5000/api/addmarks/${rollNumber}`,\r\n        subjectsMarks\r\n      );\r\n      console.log(response.data);\r\n      alert('Marks added successfully');\r\n      navigate('/students');\r\n    } catch (err) {\r\n      console.error('Error adding marks:', err);\r\n      alert('Failed to add marks. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-marks\">\r\n      <h2>Add Marks for Student: {rollNumber}</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Semester:</label>\r\n          <select\r\n            name=\"semester\"\r\n            value={subjectsMarks.semester}\r\n            onChange={(e) => setSubjectsMarks({ ...subjectsMarks, semester: e.target.value })}\r\n            required\r\n          >\r\n            <option value=\"\">Select Semester</option>\r\n            {semesters.map((semester) => (\r\n              <option key={semester.id} value={semester.name}>\r\n                {semester.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Subject Marks Input Fields */}\r\n        {subjectsMarks.subjects.map((subject, index) => (\r\n          <div key={index}>\r\n            <label>{subject.name} Marks:</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"marks\"\r\n              value={subject.marks}\r\n              onChange={(e) => handleInputChange(e, index)}\r\n              required\r\n              min=\"0\"\r\n              max=\"100\"\r\n            />\r\n          </div>\r\n        ))}\r\n\r\n        <button type=\"submit\">Save Marks</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMark;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}